{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-21-22-prct06-generics-solid-alu0101326351/src/ejerciciosPE102/ejPE102.ts","sources":["/home/usuario/ull-esit-inf-dsi-21-22-prct06-generics-solid-alu0101326351/src/ejerciciosPE102/ejPE102.ts"],"names":[],"mappings":";;;AAaA,MAAe,mBAAmB;IAC9B,YAAsB,KAAU;QAAV,UAAK,GAAL,KAAK,CAAK;IAAG,CAAC;IAEpC;;;OAGG;IACI,OAAO,CAAC,OAAU;QACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IAED;;;;OAIG;IACI,OAAO,CAAC,CAAS;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IAED;;;OAGG;IACI,UAAU,CAAC,CAAS;QACvB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5B,CAAC;IAED;;;OAGG;IACI,gBAAgB;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC7B,CAAC;CAGJ;AAID,MAAa,0BAA2B,SAAQ,mBAA2B;IAEvE;;;OAGG;IACH,YAAY,KAAe;QACvB,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAED;;;OAGG;IACI,KAAK;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IACjC,CAAC;CACJ;AAjBD,gEAiBC;AAGD,MAAa,yBAA0B,SAAQ,mBAA2B;IACtE;;;OAGG;IACH,YAAY,KAAe;QACvB,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAED;;;OAGG;IACI,KAAK;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;IAC5B,CAAC;CACJ;AAhBD,8DAgBC","sourcesContent":["interface Collectabe<T> {\n    addItem(newItem: T);\n    getItem(n: number): T;\n    removeItem(n: number);\n    getNumberOfItems(n: number);\n}\n\n\ninterface Printable {\n    print();\n}\n\n\nabstract class PrintableCollection<T> implements Collectabe<T>, Printable {\n    constructor(protected items: T[]) {}\n\n    /**\n     * Añade un nuevo item al final del array\n     * @param newItem \n     */\n    public addItem(newItem: T) {\n        this.items.push(newItem);\n    }\n\n    /**\n     * Devuelve el elemento en la posición n del array\n     * @param n \n     * @returns \n     */\n    public getItem(n: number): T {\n        return this.items[n];  \n    }\n\n    /**\n     * Elimina el item de la posición n del array\n     * @param n \n     */\n    public removeItem(n: number) {\n        this.items.splice(0, n);\n    }\n\n    /**\n     * Devuelve el número de items del array\n     * @returns \n     */\n    public getNumberOfItems() {\n        return this.items.length;\n    }\n\n    abstract print(): string;\n}\n\n\n\nexport class NumericPrintableCollection extends PrintableCollection<number> {\n\n    /**\n     * Constructor de la clase NumericPrintableCollection. Recibe un array con los números\n     * @param items \n     */\n    constructor(items: number[]) {\n        super(items);\n    }\n\n    /**\n     * Devuelve un string con los elementos dek array separados por comas\n     * @returns \n     */\n    public print(): string {\n        return this.items.toString();\n    }\n}\n\n\nexport class StringPrintableCollection extends PrintableCollection<string> {\n    /**\n     * Constructor de la clase StringPrintableCollection. Recibe un aray con los strings\n     * @param items \n     */\n    constructor(items: string[]) {\n        super(items);\n    }\n\n    /**\n     * Devuelve un string con los strings del array separados por comas\n     * @returns \n     */\n    public print(): string {\n        return this.items.join()\n    }\n}\n\n\n"]}